#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥–∞ –≤ BuyOrderMonitor
"""
import sys
import os
import asyncio
import logging

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..', 'src')))

from config.config_loader import load_config
from domain.services.orders.buy_order_monitor import BuyOrderMonitor

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[logging.StreamHandler()]
)
logger = logging.getLogger(__name__)

def test_config_loading():
    """–¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥–∞ BuyOrderMonitor...")
    
    # 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥
    config = load_config()
    buy_order_monitor_cfg = config.get("buy_order_monitor", {})
    
    print(f"üìã –ö–æ–Ω—Ñ–∏–≥ buy_order_monitor: {buy_order_monitor_cfg}")
    
    # 2. –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (–∫–∞–∫ –≤ main.py)
    max_age_minutes = buy_order_monitor_cfg.get("max_age_minutes", 5.0)  # –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ï –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    max_price_deviation_percent = buy_order_monitor_cfg.get("max_price_deviation_percent", 3.0)
    check_interval_seconds = buy_order_monitor_cfg.get("check_interval_seconds", 10)
    
    print(f"üîß –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:")
    print(f"   - max_age_minutes: {max_age_minutes} (–æ–∂–∏–¥–∞–µ—Ç—Å—è: 5.0)")
    print(f"   - max_price_deviation_percent: {max_price_deviation_percent} (–æ–∂–∏–¥–∞–µ—Ç—Å—è: 3.0)")
    print(f"   - check_interval_seconds: {check_interval_seconds} (–æ–∂–∏–¥–∞–µ—Ç—Å—è: 10)")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –æ–∂–∏–¥–∞–µ–º—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º
    expected_values = {
        "max_age_minutes": 5.0,
        "max_price_deviation_percent": 3.0,
        "check_interval_seconds": 10
    }
    
    actual_values = {
        "max_age_minutes": max_age_minutes,
        "max_price_deviation_percent": max_price_deviation_percent,
        "check_interval_seconds": check_interval_seconds
    }
    
    print(f"\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:")
    all_correct = True
    for param, expected in expected_values.items():
        actual = actual_values[param]
        is_correct = actual == expected
        status = "‚úÖ" if is_correct else "‚ùå"
        print(f"   {status} {param}: {actual} {'(–ø—Ä–∞–≤–∏–ª—å–Ω–æ)' if is_correct else f'(–æ–∂–∏–¥–∞–ª–æ—Å—å: {expected})'}")
        if not is_correct:
            all_correct = False
    
    if all_correct:
        print(f"\nüéâ –í–°–ï –ü–ê–†–ê–ú–ï–¢–†–´ –ü–†–ê–í–ò–õ–¨–ù–´–ï! –¢–µ–ø–µ—Ä—å BuyOrderMonitor –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:")
        print(f"   - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ {check_interval_seconds} —Å–µ–∫—É–Ω–¥")
        print(f"   - –û—Ä–¥–µ—Ä–∞ —Å—á–∏—Ç–∞—é—Ç—Å—è '—Ç—É—Ö–ª—ã–º–∏' —á–µ—Ä–µ–∑ {max_age_minutes} –º–∏–Ω—É—Ç (–≤–º–µ—Å—Ç–æ 15 –º–∏–Ω—É—Ç)")
        print(f"   - –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã: {max_price_deviation_percent}%")
        return True
    else:
        print(f"\n‚ùå –ï–°–¢–¨ –û–®–ò–ë–ö–ò –í –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò!")
        return False

def test_buy_order_monitor_creation():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è BuyOrderMonitor —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏"""
    print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è BuyOrderMonitor...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –º–æ–∫-–æ–±—ä–µ–∫—Ç—ã (None –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã)
        buy_monitor = BuyOrderMonitor(
            order_service=None,
            deal_service=None,
            exchange_connector=None,
            max_age_minutes=5.0,  # –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
            max_price_deviation_percent=3.0,
            check_interval_seconds=10
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ
        print(f"‚úÖ BuyOrderMonitor —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ:")
        print(f"   - max_age_minutes: {buy_monitor.max_age_minutes}")
        print(f"   - max_price_deviation_percent: {buy_monitor.max_price_deviation_percent}")
        print(f"   - check_interval_seconds: {buy_monitor.check_interval_seconds}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = buy_monitor.get_statistics()
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è BuyOrderMonitor: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("="*80)
    print("üöÄ –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø BuyOrderMonitor –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò")
    print("="*80)
    
    # –¢–µ—Å—Ç 1: –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥–∞
    config_test_passed = test_config_loading()
    
    # –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ BuyOrderMonitor
    creation_test_passed = test_buy_order_monitor_creation()
    
    print("\n" + "="*80)
    if config_test_passed and creation_test_passed:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("‚úÖ BuyOrderMonitor —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å 5 –º–∏–Ω—É—Ç –≤–º–µ—Å—Ç–æ 15 –º–∏–Ω—É—Ç")
        print("‚úÖ –û—Ä–¥–µ—Ä–∞ –±—É–¥—É—Ç —Å—á–∏—Ç–∞—Ç—å—Å—è '—Ç—É—Ö–ª—ã–º–∏' —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç, –∫–∞–∫ —É–∫–∞–∑–∞–Ω–æ –≤ –∫–æ–Ω—Ñ–∏–≥–µ")
    else:
        print("‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´ –° –¢–ï–°–¢–ê–ú–ò!")
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞")
    print("="*80)

if __name__ == "__main__":
    main()