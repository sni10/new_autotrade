# domain/services/trading_decision_engine.py
from typing import Dict, Optional
from .orderbook_analyzer import OrderBookAnalyzer, OrderBookMetrics, OrderBookSignal

class TradingDecisionEngine:
    """–î–≤–∏–∂–æ–∫ –ø—Ä–∏–Ω—è—Ç–∏—è —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ä–µ—à–µ–Ω–∏–π —Å —É—á–µ—Ç–æ–º MACD + —Å—Ç–∞–∫–∞–Ω–∞"""
    
    def __init__(self, orderbook_analyzer: OrderBookAnalyzer):
        self.orderbook_analyzer = orderbook_analyzer
        
    def should_execute_trade(self, macd_signal: bool, orderbook_metrics: OrderBookMetrics) -> Dict:
        """–ü—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏—è –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏"""
        
        result = {
            'execute': False,
            'reason': '',
            'confidence': 0,
            'modifications': {}
        }
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–≥–Ω–∞–ª–∞ —Å—Ç–∞–∫–∞–Ω–∞
        if orderbook_metrics.signal == OrderBookSignal.REJECT:
            result['reason'] = f"‚ùå –°–¢–ê–ö–ê–ù: –û—Ç–∫–ª–æ–Ω–µ–Ω–æ (—Å–ø—Ä–µ–¥: {orderbook_metrics.bid_ask_spread:.3f}%, —Å–ª–∏–ø–ø–µ–¥–∂: {orderbook_metrics.slippage_buy:.2f}%)"
            return result
            
        # –ë–∞–∑–æ–≤—ã–π MACD —Å–∏–≥–Ω–∞–ª
        if not macd_signal:
            result['reason'] = "‚ùå MACD: –ù–µ—Ç —Å–∏–≥–Ω–∞–ª–∞"
            return result
            
        # –ê–Ω–∞–ª–∏–∑ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞
        if orderbook_metrics.signal in [OrderBookSignal.STRONG_BUY, OrderBookSignal.WEAK_BUY]:
            result['execute'] = True
            result['confidence'] = orderbook_metrics.confidence
            
            # –ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ç–∞–∫–∞–Ω–∞
            modifications = {}
            
            # –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ —Ü–µ–Ω—ã –≤—Ö–æ–¥–∞ –ø–æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ
            if orderbook_metrics.support_level:
                modifications['entry_price_hint'] = orderbook_metrics.support_level
                
            # –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ —Ü–µ–Ω—ã –≤—ã—Ö–æ–¥–∞ –ø–æ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—é  
            if orderbook_metrics.resistance_level:
                modifications['exit_price_hint'] = orderbook_metrics.resistance_level
                
            # –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –ø–æ–∑–∏—Ü–∏–∏ –ø—Ä–∏ –≤—ã—Å–æ–∫–æ–º —Å–ª–∏–ø–ø–µ–¥–∂–µ
            if orderbook_metrics.slippage_buy > 0.5:
                modifications['reduce_position_size'] = 0.7  # –£–º–µ–Ω—å—à–∏—Ç—å –Ω–∞ 30%
                
            result['modifications'] = modifications
            
            # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è
            signal_emoji = "üü¢üî•" if orderbook_metrics.signal == OrderBookSignal.STRONG_BUY else "üü°"
            result['reason'] = f"{signal_emoji} –°–¢–ê–ö–ê–ù –ü–û–î–î–ï–†–ñ–ò–í–ê–ï–¢: {orderbook_metrics.signal.value} (–¥–æ–≤–µ—Ä–∏–µ: {orderbook_metrics.confidence:.1%})"
            
        elif orderbook_metrics.signal == OrderBookSignal.NEUTRAL:
            result['execute'] = True  # –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π —Å—Ç–∞–∫–∞–Ω –Ω–µ –º–µ—à–∞–µ—Ç MACD
            result['confidence'] = 0.6
            result['reason'] = "üü° –°–¢–ê–ö–ê–ù –ù–ï–ô–¢–†–ê–õ–ï–ù: MACD —Ä–µ—à–∞–µ—Ç"
            
        else:  # WEAK_SELL, STRONG_SELL
            result['reason'] = f"‚ùå –°–¢–ê–ö–ê–ù –ü–†–û–¢–ò–í: {orderbook_metrics.signal.value} (–¥–∏—Å–±–∞–ª–∞–Ω—Å: {orderbook_metrics.volume_imbalance:.1f}%)"
            
        return result
    
    def format_orderbook_info(self, metrics: OrderBookMetrics) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç–∞–∫–∞–Ω–µ"""
        info = []
        info.append(f"üìä –ê–ù–ê–õ–ò–ó –°–¢–ê–ö–ê–ù–ê:")
        info.append(f"   üí± –°–ø—Ä–µ–¥: {metrics.bid_ask_spread:.3f}%")
        info.append(f"   ‚öñÔ∏è –î–∏—Å–±–∞–ª–∞–Ω—Å: {metrics.volume_imbalance:+.1f}% {'(–ø–æ–∫—É–ø–∞—Ç–µ–ª–∏)' if metrics.volume_imbalance > 0 else '(–ø—Ä–æ–¥–∞–≤—Ü—ã)'}")
        info.append(f"   üíß –õ–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å: {metrics.liquidity_depth:.1f}")
        info.append(f"   üìâ –°–ª–∏–ø–ø–µ–¥–∂ –ø–æ–∫—É–ø–∫–∏: {metrics.slippage_buy:.2f}%")
        info.append(f"   üìà –°–ª–∏–ø–ø–µ–¥–∂ –ø—Ä–æ–¥–∞–∂–∏: {metrics.slippage_sell:.2f}%")
        
        if metrics.support_level:
            info.append(f"   üõ°Ô∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞: {metrics.support_level:.4f}")
        if metrics.resistance_level:
            info.append(f"   üöß –°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ: {metrics.resistance_level:.4f}")
            
        if metrics.big_walls:
            info.append(f"   üß± –ë–æ–ª—å—à–∏—Ö —Å—Ç–µ–Ω: {len(metrics.big_walls)}")
            
        return "\n".join(info)
    
    def apply_orderbook_modifications(self, current_price: float, budget: float, modifications: Dict) -> Dict:
        """üîß FIX: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π –æ—Ç –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç–∞–∫–∞–Ω–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏"""
        
        result = {
            'entry_price': current_price,
            'budget_multiplier': 1.0,
            'exit_price_hint': None,
            'modifications_applied': []
        }
        
        # üîß FIX: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ entry_price_hint —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏
        if 'entry_price_hint' in modifications:
            hint = modifications['entry_price_hint']
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ö–∏–Ω—Ç –Ω–∏–∂–µ —Ç–µ–∫—É—â–µ–π —Ü–µ–Ω—ã –ò –Ω–µ –¥–∞–ª—å—à–µ 2%
            if hint < current_price and abs(hint/current_price - 1) < 0.02:
                result['entry_price'] = hint
                result['modifications_applied'].append(f"üí° –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ü–µ–Ω—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏: {hint:.4f} –≤–º–µ—Å—Ç–æ {current_price:.4f}")
        
        # üîß FIX: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ exit_price_hint —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏
        if 'exit_price_hint' in modifications:
            hint = modifications['exit_price_hint']
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ö–∏–Ω—Ç –≤—ã—à–µ —Ç–µ–∫—É—â–µ–π —Ü–µ–Ω—ã –ò –Ω–µ –¥–∞–ª—å—à–µ 2%
            if hint > current_price and abs(hint/current_price - 1) < 0.02:
                result['exit_price_hint'] = hint
                result['modifications_applied'].append(f"üí° –¶–µ–ª–µ–≤–∞—è —Ü–µ–Ω–∞ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è: {hint:.4f}")

        # –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –ø–æ–∑–∏—Ü–∏–∏
        if 'reduce_position_size' in modifications:
            result['budget_multiplier'] = modifications['reduce_position_size']
            result['modifications_applied'].append(f"‚ö†Ô∏è –£–º–µ–Ω—å—à–∞–µ–º —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ –¥–æ {result['budget_multiplier']:.1%}")

        return result
