# domain/services/trading_service.py
from typing import Dict, Optional
from domain.entities.deal import Deal
from domain.entities.currency_pair import CurrencyPair
from domain.factories.deal_factory import DealFactory
from infrastructure.repositories.deals_repository import DealsRepository
from domain.services.orders.order_service import OrderService
import logging

logger = logging.getLogger(__name__)

class TradingService:
    """
    üéØ –ì–ª–∞–≤–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ—Ä–≥–æ–≤—ã–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏ (TradingOrchestrator):
    - –ö–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ —Å–¥–µ–ª–æ–∫ –∏ –æ—Ä–¥–µ—Ä–æ–≤
    - –£–ø—Ä–∞–≤–ª—è–µ—Ç –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º —Ç–æ—Ä–≥–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
    - –°–≤—è–∑—ã–≤–∞–µ—Ç –≤—Å–µ —Ç–æ—Ä–≥–æ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã –≤–æ–µ–¥–∏–Ω–æ

    –ü–µ—Ä–µ–ø–∏—Å–∞–Ω–Ω—ã–π —Å —É—á–µ—Ç–æ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã—Ö –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
    """

    def __init__(
        self,
        deals_repo: DealsRepository,
        order_service: OrderService,
        deal_factory: DealFactory
    ):
        self.deals_repo = deals_repo
        self.order_service = order_service
        self.deal_factory = deal_factory

    async def execute_buy_strategy(
        self,
        currency_pair: CurrencyPair,
        strategy_result: tuple
    ) -> Deal:
        """
        üõí –ò—Å–ø–æ–ª–Ω—è–µ—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –ø–æ–∫—É–ø–∫–∏:
        1. –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é —Å–¥–µ–ª–∫—É
        2. –°–æ–∑–¥–∞–µ—Ç buy/sell –æ—Ä–¥–µ—Ä–∞ —á–µ—Ä–µ–∑ OrderService
        3. –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç –æ—Ä–¥–µ—Ä–∞ –∫ —Å–¥–µ–ª–∫–µ
        """
        # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
        buy_price_calc, total_coins_needed, sell_price_calc, coins_to_sell, info_dict = strategy_result

        # 1. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–¥–µ–ª–∫—É
        new_deal = self.deal_factory.create_new_deal(currency_pair)
        self.deals_repo.save(new_deal)

        # 2. –°–æ–∑–¥–∞–µ–º BUY –æ—Ä–¥–µ—Ä —á–µ—Ä–µ–∑ OrderService
        buy_order = await self.order_service.create_and_place_buy_order(
            price=float(buy_price_calc),
            amount=float(total_coins_needed),
            deal_id=new_deal.deal_id,
            symbol=currency_pair.symbol
        )

        # 3. –°–æ–∑–¥–∞–µ–º SELL –æ—Ä–¥–µ—Ä —á–µ—Ä–µ–∑ OrderService
        sell_order = await self.order_service.create_and_place_sell_order(
            price=float(sell_price_calc),
            amount=float(coins_to_sell),
            deal_id=new_deal.deal_id,
            symbol=currency_pair.symbol
        )

        # 4. –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ—Ä–¥–µ—Ä–∞ –∫ —Å–¥–µ–ª–∫–µ
        new_deal.attach_orders(buy_order, sell_order)
        self.deals_repo.save(new_deal)

        logger.info(f"\nüÜï –°–æ–∑–¥–∞–Ω–∞ —Å–¥–µ–ª–∫–∞ #{new_deal.deal_id}")
        logger.info(f"   üõí BUY: {buy_order}")
        logger.info(f"   üè∑Ô∏è SELL: {sell_order}")

        return new_deal

    def process_open_deals(self):
        """
        üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Å–¥–µ–ª–æ–∫:
        - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –æ—Ä–¥–µ—Ä–æ–≤
        - –ó–∞–∫—Ä—ã—Ç–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫
        """
        open_deals = self.deals_repo.get_open_deals()
        for deal in open_deals:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å—ã –æ—Ä–¥–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ OrderService
            if deal.buy_order:
                updated_buy_order = self.order_service.get_order_status(deal.buy_order)
                if updated_buy_order and updated_buy_order.is_filled():
                    logger.info(
                        f"‚úÖ BUY –æ—Ä–¥–µ—Ä #{deal.buy_order.order_id} –∏—Å–ø–æ–ª–Ω–µ–Ω"
                    )

            if deal.sell_order:
                updated_sell_order = self.order_service.get_order_status(deal.sell_order)
                if updated_sell_order and updated_sell_order.is_filled():
                    logger.info(
                        f"‚úÖ SELL –æ—Ä–¥–µ—Ä #{deal.sell_order.order_id} –∏—Å–ø–æ–ª–Ω–µ–Ω"
                    )
                    self.close_deal(deal)

    def close_deal(self, deal: Deal):
        """
        üîí –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–¥–µ–ª–∫–∏ —Å –æ—Ç–º–µ–Ω–æ–π –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤
        """
        if deal.is_open():
            # –û—Ç–º–µ–Ω—è–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–µ –æ—Ä–¥–µ—Ä–∞ —á–µ—Ä–µ–∑ OrderService
            if deal.buy_order and deal.buy_order.is_open():
                self.order_service.cancel_order(deal.buy_order)
            if deal.sell_order and deal.sell_order.is_open():
                self.order_service.cancel_order(deal.sell_order)

            # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–∞–º—É —Å–¥–µ–ª–∫—É
            deal.close()
            self.deals_repo.save(deal)
            logger.info(f"üîí –ó–∞–∫—Ä—ã—Ç–∞ —Å–¥–µ–ª–∫–∞ #{deal.deal_id}")

    def cancel_deal(self, deal: Deal):
        """
        ‚ùå –û—Ç–º–µ–Ω—è–µ—Ç —Å–¥–µ–ª–∫—É –∏ –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –æ—Ä–¥–µ—Ä–∞
        """
        if deal.is_open():
            if deal.buy_order and deal.buy_order.is_open():
                self.order_service.cancel_order(deal.buy_order)
            if deal.sell_order and deal.sell_order.is_open():
                self.order_service.cancel_order(deal.sell_order)

            deal.cancel()
            self.deals_repo.save(deal)
            logger.warning(f"‚ùå –û—Ç–º–µ–Ω–µ–Ω–∞ —Å–¥–µ–ª–∫–∞ #{deal.deal_id}")

    def force_close_all_deals(self):
        """
        üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Å–¥–µ–ª–æ–∫
        """
        open_deals = self.deals_repo.get_open_deals()
        for deal in open_deals:
            self.close_deal(deal)
        logger.warning(f"üö® –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ {len(open_deals)} —Å–¥–µ–ª–æ–∫")

    def get_trading_statistics(self) -> Dict:
        """
        üìà –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏
        """
        open_deals = self.deals_repo.get_open_deals()
        all_deals = self.deals_repo.get_all()

        return {
            "open_deals_count": len(open_deals),
            "total_deals_count": len(all_deals),
            "can_create_new_deal": len(open_deals) < 10  # –ü—Ä–∏–º–µ—Ä–Ω—ã–π –ª–∏–º–∏—Ç
        }

    # === –°–¢–ê–†–´–ï –ú–ï–¢–û–î–´ –î–õ–Ø –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò ===

    def create_new_deal(self, currency_pair: CurrencyPair) -> Deal:
        """
        –°–æ–∑–¥–∞—ë–º —Å–¥–µ–ª–∫—É (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º API)
        """
        deal = self.deal_factory.create_new_deal(currency_pair)
        self.deals_repo.save(deal)
        logger.info(f"[TradingService] Created new deal: {deal}")
        return deal

    def force_close_all(self):
        """
        –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–π –º–µ—Ç–æ–¥: –∑–∞–∫—Ä—ã—Ç—å –≤—Å–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ —Å–¥–µ–ª–∫–∏ (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å)
        """
        self.force_close_all_deals()
