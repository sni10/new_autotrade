name: 🧪 Python Tests with PostgreSQL

on:
  pull_request:
    branches: [ "dev", "stage", "release/*", "main" ]
  push:
    branches: [ "dev", "stage", "release/*", "main" ]

jobs:
  test:
    name: 🔍 Run Pytest with PostgreSQL Database
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🧪 Run tests with PostgreSQL using docker-compose
        run: |
          echo "🚀 Starting PostgreSQL and running tests..."
          docker-compose -f docker/test/docker-compose.test.yml up --build --abort-on-container-exit --exit-code-from test-runner

      - name: 📋 Show test logs (if failed)
        if: failure()
        run: |
          echo "📋 PostgreSQL logs:"
          docker-compose -f docker/test/docker-compose.test.yml logs postgres-test
          echo "📋 Test runner logs:"
          docker-compose -f docker/test/docker-compose.test.yml logs test-runner

      - name: 🧹 Clean up containers
        if: always()
        run: |
          docker-compose -f docker/test/docker-compose.test.yml down -v
          docker system prune -f

      - name: 📦 Archive test results
        if: always()
        run: |
          # Create artifacts directory
          mkdir -p artifacts
          
          # Try to copy test results from container (if it exists)
          CONTAINER_ID=$(docker-compose -f docker/test/docker-compose.test.yml ps -q test-runner 2>/dev/null || echo "")
          if [ ! -z "$CONTAINER_ID" ]; then
            docker cp $CONTAINER_ID:/app/.pytest_cache artifacts/ 2>/dev/null || true
            docker cp $CONTAINER_ID:/app/htmlcov artifacts/ 2>/dev/null || true
          fi
          
          # Copy any local test artifacts
          cp -r .pytest_cache artifacts/ 2>/dev/null || true
          cp -r htmlcov artifacts/ 2>/dev/null || true
          cp -r tests/__pycache__ artifacts/ 2>/dev/null || true

      - name: 📤 Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-artifacts-${{ github.run_number }}
          path: artifacts
          retention-days: 7

      - name: 📊 Upload coverage reports (if available)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ github.run_number }}
          path: htmlcov
          retention-days: 7
