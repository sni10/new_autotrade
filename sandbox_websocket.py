import asyncio
import ccxt.pro as pro
import sys
import time
import logging
from datetime import datetime

logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")
logger = logging.getLogger(__name__)

# üõ† –§–∏–∫—Å –¥–ª—è Windows: —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π event loop
if sys.platform == "win32":
    asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())


async def websocket_price_monitor(exchange, symbol):
    """–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –ø–æ—Ç–æ–∫ —Ü–µ–Ω (—Ç–∏–∫–µ—Ä) —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –≤—Ä–µ–º–µ–Ω–∏ –∏ —Ä–∞–∑–Ω–∏—Ü—ã –º–µ–∂–¥—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏."""
    last_timestamp = None

    while True:
        try:
            ticker = await exchange.watch_ticker(symbol)

            timestamp = ticker['timestamp'] or time.time() * 1000  # –ï—Å–ª–∏ –Ω–µ—Ç —Ç–∞–π–º—Å—Ç–∞–º–ø–∞, –±–µ—Ä–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è

            # –†–∞–∑–Ω–∏—Ü–∞ –≤–æ –≤—Ä–µ–º–µ–Ω–∏ –º–µ–∂–¥—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏
            time_diff = (timestamp - last_timestamp) / 1000 if last_timestamp else 0
            last_timestamp = timestamp  # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–π–º—Å—Ç–∞–º–ø

            output = (f"{symbol} | Price: {ticker['last']:.2f} |"
                      f" Time: {ticker['timestamp']} |"
                      f" open: {ticker['open']:.2f} |"
                      f" close: {ticker['close']:.2f} |"
                      f" Œît: {time_diff:.3f}s")

            logger.info(output)

        except Exception as e:
            logger.exception("WebSocket Error: %s", e)


async def main():
    exchange = pro.binance({
        "rateLimit": 10,
        "enableRateLimit": True,
        "newUpdates": True,
    })

    symbol = "BTC/USDT"
    await websocket_price_monitor(exchange, symbol)


if __name__ == "__main__":
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    loop.run_until_complete(main())
